system = true
useDocker = true

# Database related scripts
mysqlService = service mysql restart\n
mysqlInitiateConnexion = mysql -u root <<EOF\n
mysqlCloseConnexion = \\q\nEOF\n
mysqlCreateDatabase = create database if not exists jhipster;\n
mysqlDropDatabase = drop database if exists jhipster;\n
mysqlStop = service mysql stop\n

cassandraService = service cassandra restart\n
cassandraCreateKeySpace = cqlsh -f src/main/resources/config/cql/create-keyspace.cql\n
cassandraCreateTables = cqlsh -f src/main/resources/config/cql/changelog/00000000000000_create-tables.cql\n
cassandraInsertUsers = cqlsh -f src/main/resources/config/cql/changelog/00000000000001_insert_default_users.cql\n
cassandraStop = service cassandra stop\n

mongodbService = service mongodb start\n
mongodbStop = service mongodb stop\n

postgreService = service postgresql start\n
postgreInitiateConnexion = psql -U postgres <<EOF\n
postgreCloseConnexion = \\q\nEOF\n
postgreCreateRole = create role if not exists jhipster login;\n
postgreCreateDatabase = create database if not exists jhipster;\n
postgreDropDatabase = drop database if exists jhipster;\n
postgreStop = service postgresql stop\n

# Docker Scripts
dockerStart = docker-compose -f src/main/docker/app.yml up
dockerStop = docker-compose -f src/main/docker/app.yml stop
mavenDockerPackage = ./mvnw package -Pprod docker:build
gradleDockerPackage = ./gradlew bootRepackage -Pprod buildDocker
dockerDropDB = docker rm jhipster-mysql\n